name: Release

on:
  pull_request:
    types: [closed]
    paths:
      - '.github/project.yml'

jobs:
  release:
    runs-on: ubuntu-latest
    name: release
    if: ${{github.event.pull_request.merged == true}}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Retrieve Project Metadata
        uses: radcortez/project-metadata-action@243817f1e0f2b4df4e012fc17efc45cff166425d
        id: metadata
        with:
          metadata-file-path: '.github/project.yml'
          local-file: true

      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Perform Maven Release
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          mvn release:prepare -B --no-transfer-progress -DreleaseVersion=${{steps.metadata.outputs.current-version}} -DdevelopmentVersion=${{steps.metadata.outputs.next-version}}
          git checkout ${{github.base_ref}}
          git rebase release
          mvn release:perform -B --no-transfer-progress

      - name: Setup Docker
        uses: docker-practice/actions-setup-docker@v1

      - name: Build and Push Image
        run: |
          # Use `target/checkout` as the Docker build PATH, Maven release:perform has generated the release artifacts in that location
          mvn install -B --no-transfer-progress -Pdocker -f target/checkout/pom.xml \
            -DskipTests \
            -Dquarkus.container-image.build=true \
            -Dquarkus.container-image.push=true \
            -Dquarkus.container-image.image=${{secrets.IMAGE_REPO_HOSTNAME}}/${{secrets.IMAGE_REPO_NAMESPACE}}/kafka-admin-api:${{steps.metadata.outputs.current-version}} \
            -Dquarkus.container-image.username="${{secrets.IMAGE_REPO_USERNAME}}" \
            -Dquarkus.container-image.password="${{secrets.IMAGE_REPO_PASSWORD}}"

      - name: Push Release Tag
        run: |
          git push
          git push --tags

      - name: Create GitHub Release
        uses: radcortez/milestone-release-action@98bd3321583e9bdbbe15c08fa4b2249371efaeaa
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          milestone-title: ${{steps.metadata.outputs.current-version}}
